{"ast":null,"code":"var _jsxFileName = \"/Users/kate/Documents/study/rendering_test/next_test/pages/feature.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Nav from \"../components/nav\";\n\nclass Feature extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\"\n    };\n  }\n\n  static async getInitialProps({\n    req\n  }) {\n    //서버측의 req\n    //이 메소드는 서버,클라이언트에서 실행됨\n    this.setState({\n      data: `특정 페이지에 대한 즐겨찾기 등록이 불가합니다. 컴포넌트가\n    전환되더라도 브라우저 주소창의 URL은 고정되어 있기 때문입니다.\n    뒤로 가기 버튼을 누르면 해당 앱내에서 이전 페이지로 이동하는 것이\n    아니라 그 전에 서핑하던 다른 웹사이트로 이동해버립니다. 새로 고침\n    버튼을 누르면 사용 중이던 컴포넌트가 아닌 무조건 최초에\n    렌더링되었던 Home 컴포넌트로 이동합니다.`\n    });\n    return req ? {\n      from: \"server\"\n    } : {\n      from: \"client \"\n    };\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.from, \" \\uC5D0\\uC11C \\uC2E4\\uD589\\uB428\"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, data), __jsx(\"img\", {\n      src: \"/sample3.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Feature;","map":{"version":3,"sources":["/Users/kate/Documents/study/rendering_test/next_test/pages/feature.js"],"names":["Nav","Feature","React","Component","constructor","props","state","data","getInitialProps","req","setState","from","render"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;;AACA,MAAMC,OAAN,SAAsBC,KAAK,CAACC,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAED,eAAaC,eAAb,CAA6B;AAAEC,IAAAA;AAAF,GAA7B,EAAsC;AACpC;AACA;AACA,SAAKC,QAAL,CAAc;AACZH,MAAAA,IAAI,EAAG;;;;;;AADK,KAAd;AAQA,WAAOE,GAAG,GAAG;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAH,GAAwB;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAAlC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWM,IAAf,qCAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,IAAJ,CAHF,EAIE;AAAK,MAAA,GAAG,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAhCmC;;AAmCtC,eAAeN,OAAf","sourcesContent":["import Nav from \"../components/nav\";\nclass Feature extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\"\n    };\n  }\n\n  static async getInitialProps({ req }) {\n    //서버측의 req\n    //이 메소드는 서버,클라이언트에서 실행됨\n    this.setState({\n      data: `특정 페이지에 대한 즐겨찾기 등록이 불가합니다. 컴포넌트가\n    전환되더라도 브라우저 주소창의 URL은 고정되어 있기 때문입니다.\n    뒤로 가기 버튼을 누르면 해당 앱내에서 이전 페이지로 이동하는 것이\n    아니라 그 전에 서핑하던 다른 웹사이트로 이동해버립니다. 새로 고침\n    버튼을 누르면 사용 중이던 컴포넌트가 아닌 무조건 최초에\n    렌더링되었던 Home 컴포넌트로 이동합니다.`\n    });\n    return req ? { from: \"server\" } : { from: \"client \" };\n  }\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div>\n        <Nav />\n        <p>{this.props.from} 에서 실행됨</p>\n        <p>{data}</p>\n        <img src=\"/sample3.jpg\" />\n      </div>\n    );\n  }\n}\n\nexport default Feature;\n"]},"metadata":{},"sourceType":"module"}